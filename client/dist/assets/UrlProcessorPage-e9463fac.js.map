{"version":3,"file":"UrlProcessorPage-e9463fac.js","sources":["../../src/pages/app/processor/UrlProcessorPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\n\r\nimport { Card, CardContent } from '@/components/ui/Card';\r\nimport Button from '@/components/ui/Button';\r\nimport { processorService, flashcardService } from '@/services';\r\nimport { ProcessedFlashcard } from '@/types/processor';\r\n\r\nconst urlProcessSchema = z.object({\r\n  title: z.string().min(1, 'Title is required'),\r\n  url: z.string().url('Please enter a valid URL'),\r\n  maxCards: z.number().int().min(5).max(100),\r\n  includeImages: z.boolean().default(false),\r\n  includeExamples: z.boolean().default(true),\r\n  focusOnMainContent: z.boolean().default(true),\r\n});\r\n\r\ntype UrlProcessFormValues = z.infer<typeof urlProcessSchema>;\r\n\r\nexport default function UrlProcessorPage() {\r\n  const navigate = useNavigate();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [processedCards, setProcessedCards] = useState<ProcessedFlashcard[]>([]);\r\n  const [urlPreview, setUrlPreview] = useState<{ title: string; description: string; image: string | null } | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [step, setStep] = useState<'input' | 'review'>('input');\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<UrlProcessFormValues>({\r\n    resolver: zodResolver(urlProcessSchema),\r\n    defaultValues: {\r\n      title: '',\r\n      url: '',\r\n      maxCards: 20,\r\n      includeImages: true,\r\n      includeExamples: true,\r\n      focusOnMainContent: true,\r\n    },\r\n  });\r\n\r\n  const watchUrl = watch('url');\r\n\r\n  const fetchUrlPreview = async () => {\r\n    if (!watchUrl || !watchUrl.startsWith('http')) return;\r\n    \r\n    try {\r\n      setIsProcessing(true);\r\n      const preview = await processorService.getUrlPreview(watchUrl);\r\n      setUrlPreview(preview);\r\n      \r\n      // Auto-fill the title if empty\r\n      if (preview.title && !watch('title')) {\r\n        setValue('title', preview.title);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to fetch URL preview:', err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: UrlProcessFormValues) => {\r\n    setIsProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await processorService.processUrl({\r\n        title: data.title,\r\n        url: data.url,\r\n        maxCards: data.maxCards,\r\n        includeImages: data.includeImages,\r\n        includeExamples: data.includeExamples,\r\n        focusOnMainContent: data.focusOnMainContent,\r\n      });\r\n      \r\n      setProcessedCards(result.cards);\r\n      setStep('review');\r\n    } catch (err) {\r\n      setError('Failed to process URL content. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveFlashcards = async () => {\r\n    setIsProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const title = watch('title');\r\n      const url = watch('url');\r\n      const newSetId = await flashcardService.createSet({\r\n        title,\r\n        description: `Generated from URL: ${url}`,\r\n        cards: processedCards.map(card => ({\r\n          front: card.question,\r\n          back: card.answer,\r\n          imageUrl: card.imageUrl || null,\r\n        })),\r\n      });\r\n      \r\n      navigate(`/flashcards/${newSetId}`);\r\n    } catch (err) {\r\n      setError('Failed to save flashcards. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCard = (index: number, field: 'question' | 'answer', value: string) => {\r\n    const updatedCards = [...processedCards];\r\n    updatedCards[index] = {\r\n      ...updatedCards[index],\r\n      [field]: value,\r\n    };\r\n    setProcessedCards(updatedCards);\r\n  };\r\n\r\n  const handleRemoveCard = (index: number) => {\r\n    setProcessedCards(processedCards.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-neutral-900\">URL Content Processor</h1>\r\n        <p className=\"mt-2 text-neutral-600\">\r\n          Create flashcards from online articles, blog posts, and other web content.\r\n        </p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 rounded-lg border border-red-200 bg-red-50 p-4 text-red-700\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {step === 'input' ? (\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n              <div>\r\n                <label htmlFor=\"url\" className=\"block text-sm font-medium text-neutral-700\">\r\n                  URL\r\n                </label>\r\n                <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                  <input\r\n                    id=\"url\"\r\n                    type=\"url\"\r\n                    className={`block w-full rounded-md border ${\r\n                      errors.url ? 'border-red-300' : 'border-neutral-300'\r\n                    } px-3 py-2 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm`}\r\n                    placeholder=\"https://example.com/article\"\r\n                    {...register('url')}\r\n                    onBlur={fetchUrlPreview}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={fetchUrlPreview}\r\n                    className=\"ml-3 inline-flex items-center rounded-md border border-neutral-300 bg-neutral-50 px-4 py-2 text-sm font-medium text-neutral-700 shadow-sm hover:bg-neutral-100 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\r\n                  >\r\n                    Preview\r\n                  </button>\r\n                </div>\r\n                {errors.url && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.url.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              {urlPreview && (\r\n                <div className=\"rounded-lg border border-neutral-200 bg-neutral-50 p-4\">\r\n                  <div className=\"flex\">\r\n                    {urlPreview.image && (\r\n                      <div className=\"mr-4 flex-shrink-0\">\r\n                        <img\r\n                          src={urlPreview.image}\r\n                          alt=\"URL Preview\"\r\n                          className=\"h-20 w-20 rounded-md object-cover\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <div>\r\n                      <h3 className=\"text-sm font-medium text-neutral-900\">\r\n                        {urlPreview.title}\r\n                      </h3>\r\n                      {urlPreview.description && (\r\n                        <p className=\"mt-1 text-sm text-neutral-500 line-clamp-2\">\r\n                          {urlPreview.description}\r\n                        </p>\r\n                      )}\r\n                      <p className=\"mt-2 text-xs text-neutral-400\">\r\n                        {watchUrl}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div>\r\n                <label htmlFor=\"title\" className=\"block text-sm font-medium text-neutral-700\">\r\n                  Set Title\r\n                </label>\r\n                <input\r\n                  id=\"title\"\r\n                  type=\"text\"\r\n                  className={`mt-1 block w-full rounded-md border ${\r\n                    errors.title ? 'border-red-300' : 'border-neutral-300'\r\n                  } px-3 py-2 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm`}\r\n                  placeholder=\"Enter a title for your flashcard set\"\r\n                  {...register('title')}\r\n                />\r\n                {errors.title && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.title.message}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\r\n                <div>\r\n                  <label htmlFor=\"maxCards\" className=\"block text-sm font-medium text-neutral-700\">\r\n                    Maximum Cards\r\n                  </label>\r\n                  <input\r\n                    id=\"maxCards\"\r\n                    type=\"number\"\r\n                    min=\"5\"\r\n                    max=\"100\"\r\n                    className={`mt-1 block w-full rounded-md border ${\r\n                      errors.maxCards ? 'border-red-300' : 'border-neutral-300'\r\n                    } px-3 py-2 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm`}\r\n                    {...register('maxCards', { valueAsNumber: true })}\r\n                  />\r\n                  {errors.maxCards && (\r\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.maxCards.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      id=\"includeImages\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-neutral-300 text-primary-600 focus:ring-primary-500\"\r\n                      {...register('includeImages')}\r\n                    />\r\n                    <label htmlFor=\"includeImages\" className=\"ml-2 block text-sm text-neutral-700\">\r\n                      Include relevant images (when available)\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      id=\"includeExamples\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-neutral-300 text-primary-600 focus:ring-primary-500\"\r\n                      {...register('includeExamples')}\r\n                    />\r\n                    <label htmlFor=\"includeExamples\" className=\"ml-2 block text-sm text-neutral-700\">\r\n                      Include examples in answers\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      id=\"focusOnMainContent\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-neutral-300 text-primary-600 focus:ring-primary-500\"\r\n                      {...register('focusOnMainContent')}\r\n                    />\r\n                    <label htmlFor=\"focusOnMainContent\" className=\"ml-2 block text-sm text-neutral-700\">\r\n                      Focus on main content (ignore menus, footers, etc.)\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <Link to=\"/dashboard\">\r\n                  <Button type=\"button\" variant=\"outline\">\r\n                    Cancel\r\n                  </Button>\r\n                </Link>\r\n                <Button type=\"submit\" isLoading={isProcessing}>\r\n                  Generate Flashcards\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"mb-4 flex justify-between\">\r\n                <h2 className=\"text-xl font-bold text-neutral-900\">Review Generated Cards</h2>\r\n                <p className=\"text-sm text-neutral-600\">{processedCards.length} cards generated</p>\r\n              </div>\r\n              <p className=\"text-neutral-600\">\r\n                Review and edit your cards before saving them to your flashcard set.\r\n              </p>\r\n              <p className=\"mt-2 text-xs text-neutral-500\">\r\n                Source: <a href={watchUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary-600 hover:underline\">{watchUrl}</a>\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {processedCards.map((card, index) => (\r\n            <Card key={index}>\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"mb-4 grid grid-cols-12 gap-4\">\r\n                  <div className=\"col-span-12 sm:col-span-6\">\r\n                    <label className=\"block text-sm font-medium text-neutral-700\">\r\n                      Question\r\n                    </label>\r\n                    <textarea\r\n                      rows={3}\r\n                      value={card.question}\r\n                      onChange={(e) => handleEditCard(index, 'question', e.target.value)}\r\n                      className=\"mt-1 block w-full rounded-md border border-neutral-300 px-3 py-2 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm\"\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"col-span-12 sm:col-span-6\">\r\n                    <label className=\"block text-sm font-medium text-neutral-700\">\r\n                      Answer\r\n                    </label>\r\n                    <textarea\r\n                      rows={3}\r\n                      value={card.answer}\r\n                      onChange={(e) => handleEditCard(index, 'answer', e.target.value)}\r\n                      className=\"mt-1 block w-full rounded-md border border-neutral-300 px-3 py-2 shadow-sm focus:border-primary-500 focus:outline-none focus:ring-primary-500 sm:text-sm\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                {card.imageUrl && (\r\n                  <div className=\"mb-4\">\r\n                    <p className=\"mb-2 text-sm font-medium text-neutral-700\">Image</p>\r\n                    <img\r\n                      src={card.imageUrl}\r\n                      alt=\"Card illustration\"\r\n                      className=\"h-32 w-auto rounded-md border border-neutral-200 object-cover\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemoveCard(index)}\r\n                    className=\"inline-flex items-center rounded-md border border-transparent px-3 py-2 text-sm font-medium leading-4 text-red-700 hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"mr-2 h-4 w-4\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                        clipRule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                    Remove Card\r\n                  </button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n\r\n          <div className=\"flex justify-between space-x-3\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={() => setStep('input')}>\r\n              Back to Editor\r\n            </Button>\r\n            <Button \r\n              type=\"button\" \r\n              isLoading={isProcessing} \r\n              onClick={handleSaveFlashcards}\r\n              disabled={processedCards.length === 0}\r\n            >\r\n              Save Flashcard Set\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":["urlProcessSchema","z","UrlProcessorPage","navigate","useNavigate","isProcessing","setIsProcessing","useState","processedCards","setProcessedCards","urlPreview","setUrlPreview","error","setError","step","setStep","register","handleSubmit","watch","errors","setValue","useForm","zodResolver","watchUrl","fetchUrlPreview","preview","processorService","err","onSubmit","data","result","handleSaveFlashcards","title","url","newSetId","flashcardService","card","handleEditCard","index","field","value","updatedCards","handleRemoveCard","_","i","jsxs","jsx","Card","CardContent","Link","Button","e"],"mappings":"uTAWA,MAAMA,EAAmBC,EAAE,OAAO,CAChC,MAAOA,EAAE,OAAA,EAAS,IAAI,EAAG,mBAAmB,EAC5C,IAAKA,EAAE,SAAS,IAAI,0BAA0B,EAC9C,SAAUA,EAAE,OAAA,EAAS,IAAA,EAAM,IAAI,CAAC,EAAE,IAAI,GAAG,EACzC,cAAeA,EAAE,UAAU,QAAQ,EAAK,EACxC,gBAAiBA,EAAE,UAAU,QAAQ,EAAI,EACzC,mBAAoBA,EAAE,UAAU,QAAQ,EAAI,CAC9C,CAAC,EAID,SAAwBC,GAAmB,CACzC,MAAMC,EAAWC,IACX,CAACC,EAAcC,CAAe,EAAIC,WAAS,EAAK,EAChD,CAACC,EAAgBC,CAAiB,EAAIF,EAAA,SAA+B,CAAE,CAAA,EACvE,CAACG,EAAYC,CAAa,EAAIJ,WAA8E,IAAI,EAChH,CAACK,EAAOC,CAAQ,EAAIN,WAAwB,IAAI,EAChD,CAACO,EAAMC,CAAO,EAAIR,WAA6B,OAAO,EAEtD,CACJ,SAAAS,EACA,aAAAC,EACA,MAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,EACpB,SAAAC,GACEC,EAA8B,CAChC,SAAUC,EAAYtB,CAAgB,EACtC,cAAe,CACb,MAAO,GACP,IAAK,GACL,SAAU,GACV,cAAe,GACf,gBAAiB,GACjB,mBAAoB,EACtB,CAAA,CACD,EAEKuB,EAAWL,EAAM,KAAK,EAEtBM,EAAkB,SAAY,CAClC,GAAI,GAACD,GAAY,CAACA,EAAS,WAAW,MAAM,GAExC,GAAA,CACFjB,EAAgB,EAAI,EACpB,MAAMmB,EAAU,MAAMC,EAAiB,cAAcH,CAAQ,EAC7DZ,EAAcc,CAAO,EAGjBA,EAAQ,OAAS,CAACP,EAAM,OAAO,GACxBE,EAAA,QAASK,EAAQ,KAAK,QAE1BE,EAAK,CACJ,QAAA,MAAM,+BAAgCA,CAAG,CAAA,QACjD,CACArB,EAAgB,EAAK,CACvB,CAAA,EAGIsB,EAAW,MAAOC,GAA+B,CACrDvB,EAAgB,EAAI,EACpBO,EAAS,IAAI,EAET,GAAA,CACI,MAAAiB,EAAS,MAAMJ,EAAiB,WAAW,CAC/C,MAAOG,EAAK,MACZ,IAAKA,EAAK,IACV,SAAUA,EAAK,SACf,cAAeA,EAAK,cACpB,gBAAiBA,EAAK,gBACtB,mBAAoBA,EAAK,kBAAA,CAC1B,EAEDpB,EAAkBqB,EAAO,KAAK,EAC9Bf,EAAQ,QAAQ,QACTY,EAAK,CACZd,EAAS,kDAAkD,EAC3D,QAAQ,MAAMc,CAAG,CAAA,QACjB,CACArB,EAAgB,EAAK,CACvB,CAAA,EAGIyB,EAAuB,SAAY,CACvCzB,EAAgB,EAAI,EACpBO,EAAS,IAAI,EAET,GAAA,CACI,MAAAmB,EAAQd,EAAM,OAAO,EACrBe,EAAMf,EAAM,KAAK,EACjBgB,EAAW,MAAMC,EAAiB,UAAU,CAChD,MAAAH,EACA,YAAa,uBAAuBC,CAAG,GACvC,MAAOzB,EAAe,IAAa4B,IAAA,CACjC,MAAOA,EAAK,SACZ,KAAMA,EAAK,OACX,SAAUA,EAAK,UAAY,IAAA,EAC3B,CAAA,CACH,EAEQjC,EAAA,eAAe+B,CAAQ,EAAE,QAC3BP,EAAK,CACZd,EAAS,8CAA8C,EACvD,QAAQ,MAAMc,CAAG,CAAA,QACjB,CACArB,EAAgB,EAAK,CACvB,CAAA,EAGI+B,EAAiB,CAACC,EAAeC,EAA8BC,IAAkB,CAC/E,MAAAC,EAAe,CAAC,GAAGjC,CAAc,EACvCiC,EAAaH,CAAK,EAAI,CACpB,GAAGG,EAAaH,CAAK,EACrB,CAACC,CAAK,EAAGC,CAAA,EAEX/B,EAAkBgC,CAAY,CAAA,EAG1BC,EAAoBJ,GAAkB,CAC1C7B,EAAkBD,EAAe,OAAO,CAACmC,EAAGC,IAAMA,IAAMN,CAAK,CAAC,CAAA,EAI9D,OAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,sCAAsC,SAAqB,wBAAA,EACxEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,6EAAA,CAAA,EACF,EAEClC,GACCkC,EAAA,IAAC,MAAI,CAAA,UAAU,mEACZ,SACHlC,EAAA,EAGDE,IAAS,QACPgC,EAAAA,IAAAC,EAAA,CACC,eAACC,EAAY,CAAA,UAAU,MACrB,SAAAH,EAAA,KAAC,QAAK,SAAU5B,EAAaW,CAAQ,EAAG,UAAU,YAChD,SAAA,CAAAiB,OAAC,MACC,CAAA,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,MAAM,UAAU,6CAA6C,SAE5E,MAAA,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,GAAG,MACH,KAAK,MACL,UAAW,kCACT3B,EAAO,IAAM,iBAAmB,oBAClC,qGACA,YAAY,8BACX,GAAGH,EAAS,KAAK,EAClB,OAAQQ,CAAA,CACV,EACAsB,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAStB,EACT,UAAU,4OACX,SAAA,SAAA,CAED,CAAA,EACF,EACCL,EAAO,KACL2B,MAAA,IAAA,CAAE,UAAU,4BAA6B,SAAA3B,EAAO,IAAI,OAAQ,CAAA,CAAA,EAEjE,EAECT,SACE,MAAI,CAAA,UAAU,yDACb,SAACmC,EAAAA,KAAA,MAAA,CAAI,UAAU,OACZ,SAAA,CAAAnC,EAAW,OACVoC,MAAC,MAAI,CAAA,UAAU,qBACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKpC,EAAW,MAChB,IAAI,cACJ,UAAU,mCAAA,CAAA,EAEd,SAED,MACC,CAAA,SAAA,CAAAoC,EAAA,IAAC,KAAG,CAAA,UAAU,uCACX,SAAApC,EAAW,MACd,EACCA,EAAW,aACVoC,EAAA,IAAC,KAAE,UAAU,6CACV,WAAW,YACd,EAEDA,EAAA,IAAA,IAAA,CAAE,UAAU,gCACV,SACHvB,EAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,SAGD,MACC,CAAA,SAAA,CAAAuB,MAAC,QAAM,CAAA,QAAQ,QAAQ,UAAU,6CAA6C,SAE9E,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,QACH,KAAK,OACL,UAAW,uCACT3B,EAAO,MAAQ,iBAAmB,oBACpC,qGACA,YAAY,uCACX,GAAGH,EAAS,OAAO,CAAA,CACtB,EACCG,EAAO,OACL2B,MAAA,IAAA,CAAE,UAAU,4BAA6B,SAAA3B,EAAO,MAAM,OAAQ,CAAA,CAAA,EAEnE,EAEA0B,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,WAAW,UAAU,6CAA6C,SAEjF,gBAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,SACL,IAAI,IACJ,IAAI,MACJ,UAAW,uCACT3B,EAAO,SAAW,iBAAmB,oBACvC,qGACC,GAAGH,EAAS,WAAY,CAAE,cAAe,GAAM,CAAA,CAClD,EACCG,EAAO,UACL2B,MAAA,IAAA,CAAE,UAAU,4BAA6B,SAAA3B,EAAO,SAAS,OAAQ,CAAA,CAAA,EAEtE,EAEA0B,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,GAAG,gBACH,KAAK,WACL,UAAU,6EACT,GAAG9B,EAAS,eAAe,CAAA,CAC9B,QACC,QAAM,CAAA,QAAQ,gBAAgB,UAAU,sCAAsC,SAE/E,2CAAA,CAAA,EACF,EACA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,GAAG,kBACH,KAAK,WACL,UAAU,6EACT,GAAG9B,EAAS,iBAAiB,CAAA,CAChC,QACC,QAAM,CAAA,QAAQ,kBAAkB,UAAU,sCAAsC,SAEjF,8BAAA,CAAA,EACF,EACA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,GAAG,qBACH,KAAK,WACL,UAAU,6EACT,GAAG9B,EAAS,oBAAoB,CAAA,CACnC,QACC,QAAM,CAAA,QAAQ,qBAAqB,UAAU,sCAAsC,SAEpF,sDAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAACC,EAAA,IAAAG,EAAA,CAAK,GAAG,aACP,SAACH,EAAAA,IAAAI,EAAA,CAAO,KAAK,SAAS,QAAQ,UAAU,SAAA,QAExC,CAAA,EACF,QACCA,EAAO,CAAA,KAAK,SAAS,UAAW7C,EAAc,SAE/C,sBAAA,CAAA,EACF,CAAA,EACF,EACF,CACF,CAAA,EAECwC,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAC,MAACC,EACC,CAAA,SAAAF,EAAAA,KAACG,EAAY,CAAA,UAAU,MACrB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,qCAAqC,SAAsB,yBAAA,EACzED,EAAAA,KAAC,IAAE,CAAA,UAAU,2BAA4B,SAAA,CAAerC,EAAA,OAAO,kBAAA,EAAgB,CAAA,EACjF,EACCsC,EAAA,IAAA,IAAA,CAAE,UAAU,mBAAmB,SAEhC,uEAAA,EACAD,EAAAA,KAAC,IAAE,CAAA,UAAU,gCAAgC,SAAA,CAAA,WACnCC,EAAAA,IAAC,IAAE,CAAA,KAAMvB,EAAU,OAAO,SAAS,IAAI,sBAAsB,UAAU,mCAAoC,SAASA,CAAA,CAAA,CAAA,EAC9H,CAAA,CAAA,CACF,CACF,CAAA,EAECf,EAAe,IAAI,CAAC4B,EAAME,UACxBS,EACC,CAAA,SAAAF,EAAA,KAACG,EAAY,CAAA,UAAU,MACrB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,6CAA6C,SAE9D,WAAA,EACAA,EAAA,IAAC,WAAA,CACC,KAAM,EACN,MAAOV,EAAK,SACZ,SAAWe,GAAMd,EAAeC,EAAO,WAAYa,EAAE,OAAO,KAAK,EACjE,UAAU,0JAAA,CACX,CAAA,EACH,EACAN,EAAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,UAAU,6CAA6C,SAE9D,SAAA,EACAA,EAAA,IAAC,WAAA,CACC,KAAM,EACN,MAAOV,EAAK,OACZ,SAAWe,GAAMd,EAAeC,EAAO,SAAUa,EAAE,OAAO,KAAK,EAC/D,UAAU,0JAAA,CACX,CAAA,EACH,CAAA,EACF,EACCf,EAAK,UACHS,OAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,4CAA4C,SAAK,QAAA,EAC9DA,EAAA,IAAC,MAAA,CACC,IAAKV,EAAK,SACV,IAAI,oBACJ,UAAU,+DAAA,CACZ,CAAA,EACF,EAEFU,EAAAA,IAAC,MAAI,CAAA,UAAU,mBACb,SAAAD,EAAA,KAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMH,EAAiBJ,CAAK,EACrC,UAAU,4MAEV,SAAA,CAAAQ,EAAA,IAAC,MAAA,CACC,MAAM,6BACN,UAAU,eACV,QAAQ,YACR,KAAK,eAEL,SAAAA,EAAA,IAAC,OAAA,CACC,SAAS,UACT,EAAE,8MACF,SAAS,SAAA,CACX,CAAA,CACF,EAAM,aAAA,CAAA,CAAA,EAGV,CAAA,EACF,CAAA,EAzDSR,CA0DX,CACD,EAEDO,EAAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACC,EAAAA,IAAAI,EAAA,CAAO,KAAK,SAAS,QAAQ,UAAU,QAAS,IAAMnC,EAAQ,OAAO,EAAG,SAEzE,gBAAA,CAAA,EACA+B,EAAA,IAACI,EAAA,CACC,KAAK,SACL,UAAW7C,EACX,QAAS0B,EACT,SAAUvB,EAAe,SAAW,EACrC,SAAA,oBAAA,CAED,CAAA,EACF,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ"}