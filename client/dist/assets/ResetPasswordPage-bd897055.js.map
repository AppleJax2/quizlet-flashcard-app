{"version":3,"file":"ResetPasswordPage-bd897055.js","sources":["../../src/pages/auth/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\n\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { resetPasswordFormSchema } from '@/utils/validation';\r\nimport Input from '@/components/ui/Input';\r\nimport Button from '@/components/ui/Button';\r\nimport { Card, CardContent } from '@/components/ui/Card';\r\n\r\ntype ResetPasswordFormValues = z.infer<typeof resetPasswordFormSchema>;\r\n\r\nexport default function ResetPasswordPage() {\r\n  const { token } = useParams<{ token: string }>();\r\n  const navigate = useNavigate();\r\n  const { resetPassword, error, isLoading, clearError } = useAuth();\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm<ResetPasswordFormValues>({\r\n    resolver: zodResolver(resetPasswordFormSchema),\r\n    defaultValues: {\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (data: ResetPasswordFormValues) => {\r\n    if (!token) return;\r\n    \r\n    clearError(); // Clear any previous errors\r\n    try {\r\n      await resetPassword({\r\n        token,\r\n        password: data.password,\r\n      });\r\n      setIsSubmitted(true);\r\n    } catch (error) {\r\n      // Error will be handled by the auth context\r\n    }\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"flex min-h-[80vh] items-center justify-center px-4 py-12 sm:px-6 lg:px-8\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"p-8\">\r\n            <div className=\"mb-8 text-center\">\r\n              <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-green-100\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-8 w-8 text-green-600\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M5 13l4 4L19 7\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold text-neutral-900\">\r\n                Password Reset Successful\r\n              </h1>\r\n              <p className=\"mt-2 text-neutral-600\">\r\n                Your password has been successfully reset. You can now log in with your new password.\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-8 text-center\">\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => navigate('/login')}\r\n                className=\"w-full py-2.5\"\r\n              >\r\n                Go to Login\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"flex min-h-[80vh] items-center justify-center px-4 py-12 sm:px-6 lg:px-8\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardContent className=\"p-8\">\r\n            <div className=\"mb-8 text-center\">\r\n              <div className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-red-100\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-8 w-8 text-red-600\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold text-neutral-900\">\r\n                Invalid or Expired Token\r\n              </h1>\r\n              <p className=\"mt-2 text-neutral-600\">\r\n                The password reset link is invalid or has expired. Please request a new link.\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-8 text-center\">\r\n              <Link\r\n                to=\"/forgot-password\"\r\n                className=\"font-medium text-primary-600 hover:text-primary-700\"\r\n              >\r\n                Request New Link\r\n              </Link>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex min-h-[80vh] items-center justify-center px-4 py-12 sm:px-6 lg:px-8\">\r\n      <Card className=\"w-full max-w-md\">\r\n        <CardContent className=\"p-8\">\r\n          <div className=\"mb-8 text-center\">\r\n            <h1 className=\"text-3xl font-bold text-neutral-900\">\r\n              Reset Password\r\n            </h1>\r\n            <p className=\"mt-2 text-neutral-600\">\r\n              Enter and confirm your new password below.\r\n            </p>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-6 rounded-lg border border-red-200 bg-red-50 p-4 text-red-700\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n            <Input\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              error={errors.password?.message}\r\n              fullWidth\r\n              {...register('password')}\r\n            />\r\n            \r\n            <Input\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              error={errors.confirmPassword?.message}\r\n              fullWidth\r\n              {...register('confirmPassword')}\r\n            />\r\n\r\n            <Button type=\"submit\" fullWidth isLoading={isLoading} className=\"py-2.5\">\r\n              Reset Password\r\n            </Button>\r\n          </form>\r\n\r\n          <div className=\"mt-8 text-center text-sm text-neutral-600\">\r\n            Remember your password?{' '}\r\n            <Link\r\n              to=\"/login\"\r\n              className=\"font-medium text-primary-600 hover:text-primary-700\"\r\n            >\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n} "],"names":["ResetPasswordPage","token","useParams","navigate","useNavigate","resetPassword","error","isLoading","clearError","useAuth","isSubmitted","setIsSubmitted","useState","register","handleSubmit","errors","watch","useForm","zodResolver","resetPasswordFormSchema","onSubmit","data","jsx","Card","jsxs","CardContent","Button","Input","_a","_b","Link"],"mappings":"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"}